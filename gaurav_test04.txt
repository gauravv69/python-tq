Section 1 . Predict the output of program (12 marks)
Q1. 
x = 10
y = 50
x, y = y, x
print(x, y)
--> 50 10



Q2.
def func(a, b=[]):
    b.append(a)
    return b

print(func(1))
print(func(2))
--> [1]
    [1, 2]



Q3.
a = 5
b = 3
print(a ** b % 10)
--> 5



Q4.
nums = [10, 20, 30, 40, 50]
print(nums[::-1][1])
--> 40



Q5.
s = "Python"
print(s[2:5])
--> tho



Q6.
def rec_sum(n):
    if n == 0:
        return 0
    return n + rec_sum(n-1)
   print(rec_sum(3))
--> 3 + 2 + 1 + 0 = 6
    Final output: 6




Q1: Which of the following is used to define a block of code in Python?
a) Indentation
b) Brackets
c) Parentheses
d) Quotation marks
--> a) Indentation


Q2: What is the output of 3 * 1**3?
a) 27
b) 3
c) 9
d) 1
--> b) 3


Q3: Which of these is the correct extension of Python files?
a) .pt
b) .py
c) .pyt
d) .pyn
--> b) .py


Q4: What does the len() function do in Python?
a) Returns the last index of a list
b) Returns the total count of items in an object
c) Removes an item from a list
d) Sorts the elements in ascending order
--> b) Returns the total count of items in an object


Q5: Which statement is correct about Python lists?
a) Lists are immutable
b) Lists are ordered collections
c) Lists donâ€™t allow duplicates
d) Lists can only store strings
--> b) Lists are ordered collections


Q6: What is the output of print(bool(""))?
a) True
b) False
c) None
d) Error
--> b) False




Section 3.  Program (each carry 3 marks)

Q1. You are given a list of student marks. Remove duplicates, sort them in descending order, and print the top 3 marks.
--> marks = [78, 88, 95, 85, 56, 88, 65, 95]
    
    dup_marks = list(set(marks))
    dup_marks.sort(reverse = True)

    print("Top 3 Marks:", dup_marks[:3])




Q2. Count the frequency of each word in a sentence and display in dictionary format.
--> sentence = "My name is Gaurav"
    
    words = sentence.split()
    
    freq = {}
    
    for word in words:
	if word in freq:
	    freq[word] += 1
	else:
	    freq[word] = 1
   
    print(freq)



















